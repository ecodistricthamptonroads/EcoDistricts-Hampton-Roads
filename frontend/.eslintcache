[{"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/index.js":"1","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/AppContainer.js":"2","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Header.js":"3","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/Issue.js":"4","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/ProjectStatus/ProjectPage.js":"5","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/ProjectStatus/ProjectStatus.js":"6","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/News/News.js":"7","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Surveys/Surveys.js":"8","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Article/Article.js":"9","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/About/About.js":"10","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/About/MeetTheTeam.js":"11","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Resource/Resource.js":"12","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Land.js":"13","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/EducationJobs/EducationJobs.js":"14","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/ReportIssue.js":"15","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/ViewIssues.js":"16","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/News/Events.js":"17","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/helpers/api.js":"18"},{"size":311,"mtime":1609904461041,"results":"19","hashOfConfig":"20"},{"size":1944,"mtime":1609904461037,"results":"21","hashOfConfig":"20"},{"size":3373,"mtime":1609942324768,"results":"22","hashOfConfig":"20"},{"size":370,"mtime":1609904461041,"results":"23","hashOfConfig":"20"},{"size":2826,"mtime":1609904461041,"results":"24","hashOfConfig":"20"},{"size":3524,"mtime":1609944537720,"results":"25","hashOfConfig":"20"},{"size":2862,"mtime":1609944292932,"results":"26","hashOfConfig":"20"},{"size":2337,"mtime":1609911757556,"results":"27","hashOfConfig":"20"},{"size":1616,"mtime":1609904461037,"results":"28","hashOfConfig":"20"},{"size":1552,"mtime":1609941671554,"results":"29","hashOfConfig":"20"},{"size":5350,"mtime":1609942241744,"results":"30","hashOfConfig":"20"},{"size":3859,"mtime":1609944486659,"results":"31","hashOfConfig":"20"},{"size":28855,"mtime":1609946922228,"results":"32","hashOfConfig":"20"},{"size":19454,"mtime":1609942324768,"results":"33","hashOfConfig":"20"},{"size":4889,"mtime":1609904461041,"results":"34","hashOfConfig":"20"},{"size":1766,"mtime":1609904461041,"results":"35","hashOfConfig":"20"},{"size":2691,"mtime":1609904461041,"results":"36","hashOfConfig":"20"},{"size":1532,"mtime":1609942433783,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1wlo86p",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/index.js",[],["84","85"],"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/AppContainer.js",["86"],"import React, { Component } from 'react';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport '../assets/stylesheets/app.css';\nimport { hot } from 'react-hot-loader';\n\nimport Header from './Header';\n// import Footer from './Footer';\nimport Land from './Land';\nimport Issue from './Issue/Issue';\nimport EducationJobs from './EducationJobs/EducationJobs';\nimport ProjectStatus from './ProjectStatus/ProjectStatus';\nimport ProjectPage from './ProjectStatus/ProjectPage';\nimport News from './News/News';\nimport Article from './Article/Article';\nimport Surveys from './Surveys/Surveys';\nimport About from './About/About';\nimport Resource from './Resource/Resource';\nimport MeetTheTeam from './About/MeetTheTeam';\n\nclass AppContainer extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"Head\">\n          <Header />\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <Switch>\n                <Route exact path=\"/\" component={Land} />\n                <Route path=\"/issues\" component={Issue} />\n                <Route path=\"/opportunities\" component={EducationJobs} />\n                <Route path=\"/projectstatus\" component={ProjectStatus} />\n                <Route path=\"/surveys\" component={Surveys} />\n                <Route exact path=\"/news\" component={News} />\n                <Route path=\"/news/:id\" component={Article} />\n                <Route path=\"/Project/:id\" component={ProjectPage} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/team\" component={MeetTheTeam} />\n                <Route path=\"/resources\" component={Resource} />\n                <Route component={Land} />\n              </Switch>\n              {/* <div className=\"col-sm-10 offset-md-1\"></div> */}\n            </div>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n// hot(module)\nexport default AppContainer;\n","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Header.js",["87","88","89","90"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../assets/images/logo.png';\nimport brand from '../assets/images/Brand1.png';\nimport Land from './Land';\n\nimport '../assets/stylesheets/app.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  componentDidMount() {}\n\n  isLoggedIn() {\n    switch (this.props.user) {\n      case null:\n        return 'still deciding';\n      case false:\n        return (\n          <Nav.Item>\n            <a href={'/api/auth/google/get'}>Admin? Log in here</a>\n          </Nav.Item>\n        );\n      default:\n        return (\n          <Nav.Item>\n            <a href={'/api/auth/logout'}>Log Out</a>\n          </Nav.Item>\n        );\n    }\n  }\n\n  email() {\n    if (this.props.user)\n      return (\n        <Nav.Item>\n          <Nav.Link eventKey=\"8\" as={Link} to=\"/email\">\n            Add Admin Email\n          </Nav.Link>\n        </Nav.Item>\n      );\n  }\n\n  render() {\n    const CONTACT_US_LINK =\n      'https://us4.list-manage.com/contact-form?u=51eb002c7ef49ac4bf7de17e2&form_id=c58d36b6f54bd9b975ec2607253190d2';\n    return (\n      <Navbar collapseOnSelect expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <img id=\"navbar-logo\" src={brand}></img>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n            {/* <Nav className=\"mr-auto\"> */}\n            <Nav.Item>\n              <Nav.Link eventKey=\"2\" as={Link} to=\"/news\">\n                News\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"4\" as={Link} to=\"/surveys\">\n                Surveys\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"5\" as={Link} to=\"/opportunities\">\n                Jobs\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"6\" as={Link} to=\"/resources\">\n                Resources\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"7\" as={Link} to=\"/projectstatus\">\n                Projects\n              </Nav.Link>\n            </Nav.Item>\n            <NavDropdown\n              onMouseEnter={() => {\n                this.setState({ isOpen: true });\n              }}\n              onMouseLeave={() => {\n                this.setState({ isOpen: false });\n              }}\n              open={this.state.isOpen}\n              title=\"About\"\n              id=\"basic-nav-dropdown\"\n            >\n              <Nav.Item>\n                <Nav.Link eventKey=\"1\" as={Link} to=\"/about\">\n                  About Eco\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"9\" as={Link} to=\"/team\">\n                  Meet the Team\n                </Nav.Link>\n              </Nav.Item>\n            </NavDropdown>\n\n            <Nav.Item>\n              <a className=\"nav-link\" href={CONTACT_US_LINK}>\n                Contact Us\n              </a>\n            </Nav.Item>\n            {this.email()}\n          </Nav>\n          <Nav>{this.isLoggedIn()}</Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/Issue.js",["91"],"import { Component } from 'react';\nimport React from 'react';\nimport ReportIssue from './ReportIssue';\nimport ViewIssues from './ViewIssues';\n\nclass Issue extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <ReportIssue />\n        <hr />\n        <ViewIssues />\n      </div>\n    );\n  }\n}\n\nexport default Issue;\n","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/ProjectStatus/ProjectPage.js",["92","93","94","95"],"import { Component } from 'react';\nimport React from 'react';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport '../../assets/stylesheets/ProjectPage.css';\n\nclass ProjectPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"project-page\">\n        <div className=\" project-heading\">\n          <div>\n            <h1>Warfield Canal Project</h1>\n            <h2>Start Date: Oct 30,2020</h2>\n          </div>\n        </div>\n        <div className=\"project-row our-goal\">\n          <h1>Our goal</h1>\n          <p>\n            The initial aims of the proposed Warfield Canal project submitted\n            included chemical analysis, contamination assessment and evaluation,\n            community planning for restoration, clean up and beautification,\n            resource access and enhancement ( example ( a walkable pathway) and\n            designation as a potential Bird Estuary and Conservation Area ( due\n            to current bird habitat)\n          </p>\n        </div>\n        <div className=\"project-row\">\n          <img className=\"project-img-gal\" />\n        </div>\n        <div className=\"project-row potential-outcomes\">\n          <h1>Potential Outcomes</h1>\n          <p>\n            Potential Outcomes of the Project; (1) clean up, beautification and\n            restoration of the canal waterway and boundary area (2) pollution\n            prevention from stormwater and homeowner yard discharge (3)\n            elimination of a potential Environmental Justice issues and health\n            hazard (4) additional funding from Federal and State sources for\n            similar projects and further enhancement; (5) disignation as a Bird\n            Sanctuary or Conservation area.\n          </p>\n        </div>\n        <div className=\"\">\n          <div className=\"programs\">\n            <h2>More Info on similar programs</h2>\n          </div>\n          <div className=\"button-row\">\n            <Button>Planet Stewardship Project</Button>\n            <Button>Weather Ready Nation Program</Button>\n          </div>\n        </div>\n        <div className=\"project-row meet-team\">\n          <h1>Meet the Team!</h1>\n        </div>\n        <div className=\"project-row team\">\n          <div className=\"col \">\n            <img className=\"team-leader-img\" />\n            <h2>Team Lead</h2>\n          </div>\n          <p className=\"col\">\n            List of rest of team: <br />\n            Onson Sweemey <br />\n            Rey Mcsriff <br /> Mario Mcalwain <br />\n            Raul Chamgerlain <br /> Kevin Nogilny <br />\n            Jeromy Gridean <br /> Shown Furcom <br /> Mike Truk <br />\n            Tim Sandaelem <br />\n            Todd Bonzales\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ProjectPage;\n","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/ProjectStatus/ProjectStatus.js",[],"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/News/News.js",["96","97"],"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Surveys/Surveys.js",["98","99"],"import { Component } from 'react';\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { getSurveys } from '../../helpers/api';\n// import focus_group from '../../assets/images/focus_group.png';\nimport futuresuburbs from '../../assets/images/survey-futuresuburbs.jpg';\n\nimport '../../assets/stylesheets/app.css';\n\nclass Surveys extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notInitial: false,\n      surveys: []\n    };\n  }\n\n  componentDidMount() {\n    getSurveys().then(req => {\n      this.setState({ surveys: req.data });\n    });\n  }\n\n  getSurveysList() {\n    return (\n      <div>\n        <div className=\"SurveyList\">\n          {this.state.surveys.map(survey => {\n            return (\n              <a key={survey.id} href={survey.link}>\n                <div className=\"Survey-elem\">\n                  <div className=\"Survey-value\"> {survey.title} </div>\n                </div>\n              </a>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n  getHeading() {\n    return (\n      <div>\n        <div className=\"Survey-Heading-div\">\n          Sign Up to Provide Us Feedback!\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Survey-container\">\n        {this.getHeading()}\n        <div className=\"row\">\n          <img className=\"col\" Style=\"width:50%\" src={futuresuburbs} />\n          <div className=\"col\">\n            <h1 className=\"row Survey-SubHeader\">\n              Cavalier Manor Study of Community Needs\n            </h1>\n            <h1 className=\"row focus-text\">\n              Help the Cavalier Manor area become sustainable, equitable,\n              resilient, and climate ready!\n            </h1>\n            <h1 className=\"row focus-text\">\n              Compensation will be a $20 Amazon Gift Card for a 90 minute\n              session.\n            </h1>\n            <h1 className=\"row focus-text\">\n              Cavalier Manor, Victory Park, and Crystal Lake Residents Only\n            </h1>\n          </div>\n        </div>\n        <div className=\"Survey-Body\">\n          <h1 className=\"Survey-Feedback\">Help Us Improve!</h1>\n          <h3>Please fill out our survey to help us improve the community</h3>\n          {this.getSurveysList()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Surveys;\n","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Article/Article.js",[],"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/About/About.js",["100","101"],"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/About/MeetTheTeam.js",[],"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Resource/Resource.js",["102"],"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Land.js",["103","104","105","106","107","108","109","110","111","112","113","114"],"/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/EducationJobs/EducationJobs.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import { Component } from 'react';\nimport React from 'react';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport '../../assets/stylesheets/JobsPage.css';\nimport { getJobs } from '../../helpers/api';\nclass EducationJobs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentJob: null,\n      jobs: []\n    };\n  }\n  render() {\n    return <Jobs />;\n  }\n}\n\nclass Jobs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      salary: 0,\n      industry: [],\n      location: [],\n      jobTypes: [],\n      careers: [],\n      location: [],\n      company: '',\n      jobs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleCheckboxLocation = this.handleCheckboxLocation.bind(this);\n    this.handleCheckboxIndustry = this.handleCheckboxIndustry.bind(this);\n    this.handleChangeNumber = this.handleChangeNumber.bind(this);\n    this.handleCheckboxJobType = this.handleCheckboxJobType.bind(this);\n    this.handleCheckboxCareer = this.handleCheckboxCareer.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value.toLowerCase() });\n  }\n  handleChangeNumber(e) {\n    this.setState({ [e.target.name]: parseInt(e.target.value.toLowerCase()) });\n  }\n  handleCheckboxLocation(e) {\n    const location_name = e.target.value.toLowerCase();\n    if (this.state.location.includes(location_name)) {\n      var newLocation = [\n        ...this.state.location.filter(\n          location => !location.includes(location_name)\n        )\n      ];\n    } else {\n      var newLocation = [...this.state.location, location_name];\n    }\n    this.setState({ location: newLocation });\n  }\n  handleCheckboxIndustry(e) {\n    const industry_name = e.target.value.toLowerCase();\n    if (this.state.industry.includes(industry_name)) {\n      var newIndustry = [\n        ...this.state.industry.filter(\n          industry => !industry.includes(industry_name)\n        )\n      ];\n    } else {\n      var newIndustry = [...this.state.industry, industry_name];\n    }\n    this.setState({ industry: newIndustry });\n  }\n  handleCheckboxJobType(e) {\n    const jobType_value = e.target.value.toLowerCase();\n    if (this.state.jobTypes.includes(jobType_value)) {\n      var newJobType = [\n        ...this.state.jobTypes.filter(\n          jobType => !jobType.includes(jobType_value)\n        )\n      ];\n    } else {\n      var newJobType = [...this.state.jobTypes, jobType_value];\n    }\n    this.setState({ jobTypes: newJobType });\n  }\n  handleCheckboxCareer(e) {\n    const career_value = e.target.value.toLowerCase();\n    if (this.state.careers.includes(career_value)) {\n      var newJobType = [\n        ...this.state.careers.filter(career => !career.includes(career_value))\n      ];\n    } else {\n      var newJobType = [...this.state.careers, career_value];\n    }\n    this.setState({ careers: newJobType });\n  }\n  handleCheckboxLocation(e) {\n    const location_name = e.target.value.toLowerCase();\n    if (this.state.location.includes(location_name)) {\n      var newLocation = [\n        ...this.state.location.filter(\n          location => !location.includes(location_name)\n        )\n      ];\n    } else {\n      var newLocation = [...this.state.location, location_name];\n    }\n    this.setState({ location: newLocation });\n  }\n  handleSearch(e) {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value.toLowerCase() });\n  }\n\n  componentDidMount() {\n    getJobs().then(jobs => {\n      this.setState({ jobs: jobs.data });\n      console.log(jobs.data);\n    });\n  }\n\n  _getDateFormatted(date) {\n    const monthNames = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ];\n\n    var mm = date.getMonth();\n    var dd = date.getDate();\n    // date.get;\n\n    return [monthNames[mm], (dd > 9 ? '' : '0') + dd, date.getFullYear()].join(\n      '-'\n    );\n  }\n  _jobsIndustryIsChecked(job) {\n    return (\n      this.state.industry.length == 0 ||\n      this.state.industry.includes(job.industry.toLowerCase())\n    );\n  }\n  _jobsTypeIsChecked(job) {\n    return (\n      this.state.jobTypes.length == 0 ||\n      this.state.jobTypes.includes(job.jobType.toLowerCase())\n    );\n  }\n  _jobsLocationIsChecked(job) {\n    return (\n      this.state.location.length == 0 ||\n      this.state.location.includes(job.location.toLowerCase())\n    );\n  }\n  _jobsCareerIsChecked(job) {\n    return (\n      this.state.careers.length == 0 ||\n      this.state.careers.includes(job.career.toLowerCase())\n    );\n  }\n  filterJob(job) {\n    let search_filter_contains =\n      job.title && job.title.toLowerCase().includes(this.state.search);\n    search_filter_contains =\n      search_filter_contains ||\n      (job.description &&\n        job.description.toLowerCase().includes(this.state.search));\n\n    return (\n      search_filter_contains &&\n      this._jobsIndustryIsChecked(job) &&\n      this._jobsLocationIsChecked(job) &&\n      this._jobsTypeIsChecked(job) &&\n      this._jobsCareerIsChecked(job) &&\n      job.salary >= this.state.salary\n    );\n  }\n  displayJobs() {\n    const JOBS_TO_SHOW = this.state.jobs.filter(job => this.filterJob(job));\n    return (\n      <div className=\"jobs card-columns \">\n        {JOBS_TO_SHOW.length != 0 ? (\n          JOBS_TO_SHOW.map(job => {\n            return (\n              <a key={job._id} href={job._id}>\n                <Card className=\"job-elem col-4\" style={{ maxWidth: '36rem' }}>\n                  <div className=\"job-card-row\">\n                    <Card.Img\n                      className=\"job-card-img\"\n                      variant=\"top\"\n                      src=\"https://brands-cdn.employbridge.com/content/assets/news//40169262_14124173_Large.jpg\"\n                    />\n                    <Card.Title\n                      style={{\n                        padding: '5%',\n                        textOverflow: 'clip',\n                        overflowWrap: 'break-word',\n                        width: '50%'\n                      }}\n                    >\n                      {job.title || ''}\n                    </Card.Title>\n                  </div>\n                  <hr />\n                  <Card.Body>\n                    <Card.Text>\n                      {'Posted on ' +\n                        this._getDateFormatted(new Date(job.postDate))}\n                    </Card.Text>\n                    <Card.Text>{'@  ' + (job.company || '')} </Card.Text>\n                    <Card.Text>{'$  ' + (job.salary || '')} </Card.Text>\n                    <Card.Text>{'📍 ' + (job.location || '')} </Card.Text>\n\n                    <hr />\n                    <div\n                      className=\"job-card-row flex-center \"\n                      style={{ padding: '5%' }}\n                    >\n                      <Button\n                        onClick={e => {\n                          e.preventDefault();\n                          window.location.href = job.link;\n                        }}\n                      >\n                        Apply\n                      </Button>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </a>\n            );\n          })\n        ) : (\n          <div>\n            <div className=\"marquee\">\n              <h1>Didn't find any Jobs :(</h1>\n            </div>\n            <div className=\"marquee\">\n              <h1>Didn't find any Jobs :(</h1>\n            </div>\n            <div className=\"marquee\">\n              <h1>Didn't find any Jobs :(</h1>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  getSearch() {\n    return (\n      <Form className=\"Job-search\" onSubmit={this.handleSearch}>\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n          <Form.Control\n            name=\"search\"\n            value={this.state.search}\n            onChange={this.handleChange}\n            type=\"text\"\n            placeholder=\"Search\"\n          />\n        </Form.Group>\n      </Form>\n    );\n  }\n  displayFilters() {\n    let filteredJobs = this.state.jobs;\n    const locations = [\n      ...new Set(filteredJobs.map(job => job.location))\n    ].sort();\n    const salaries = [\n      ...new Set(filteredJobs.map(job => parseInt(job.salary)))\n    ].sort(function(a, b) {\n      return a - b;\n    });\n    const industries = [\n      ...new Set(filteredJobs.map(job => job.industry))\n    ].sort();\n    const careers = [...new Set(filteredJobs.map(job => job.career))].sort();\n    const jobTypes = [...new Set(filteredJobs.map(job => job.jobType))].sort();\n    console.log(filteredJobs);\n    return (\n      <div className=\"grid-child job-filter-box \">\n        {locations.length != 0 ? (\n          <div className=\"location-checkboxes row\">\n            <div className=\"col\">\n              <h3 className=\"row\"> Locations:</h3>\n              <p className=\"row\">Location of the Jobs</p>\n            </div>\n\n            <div className=\"col checkbox-options\">\n              {locations.map((location_name, idx) => {\n                return (\n                  <div\n                    key={location_name}\n                    className=\"form-check col form-check-inline\"\n                  >\n                    <input\n                      className=\"form-check-input location-checkbox\"\n                      id={location_name + idx}\n                      type=\"checkbox\"\n                      name=\"location\"\n                      value={location_name}\n                      onClick={this.handleCheckboxLocation}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor={location_name + idx}\n                    >\n                      {location_name.toUpperCase()}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n\n            <Button\n              className=\"col-1\"\n              bsPrefix=\"job-btn\"\n              onClick={e => {\n                this.setState({ location: [] });\n                Array.from(\n                  document.getElementsByClassName('location-checkbox')\n                ).map(checkbox => (checkbox.checked = false));\n              }}\n            >\n              Clear All\n            </Button>\n          </div>\n        ) : null}\n\n        {salaries.length != 0 ? (\n          <div className=\"salary-checkboxes row\">\n            <div className=\"col\">\n              <h3 className=\"row\"> Salary:</h3>\n              <p className=\"row\"> Annual Salary of Job</p>\n            </div>\n            <div className=\"col checkbox-options\">\n              {salaries.map((salary_value, idx) => {\n                return (\n                  <div\n                    key={salary_value}\n                    className=\"form-check col form-check-inline salary-checkbox\"\n                  >\n                    <input\n                      className=\"form-check-input\"\n                      id={salary_value + idx}\n                      type=\"radio\"\n                      name=\"salary\"\n                      value={salary_value}\n                      onClick={this.handleChangeNumber}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor={salary_value + idx}\n                    >\n                      {'$' + salary_value + '+'}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n            <div\n              key=\"AllSalaries\"\n              className=\"col-1 form-check form-check-inline\"\n            >\n              <input\n                className=\"form-check-input salary-checkbox\"\n                id=\"AllSalaries\"\n                type=\"radio\"\n                name=\"salary\"\n                value={0}\n                defaultChecked={true}\n                onClick={this.handleChangeNumber}\n              />\n              <label className=\"form-check-label\" htmlFor=\"AllSalaries\">\n                All Salaries\n              </label>\n            </div>\n          </div>\n        ) : null}\n        {industries.length != 0 ? (\n          <div className=\"industry-checkboxes row\">\n            <div className=\"col\">\n              <h3 className=\"row\">Industry:</h3>\n              <p className=\"row\">Which Industry Jobs belong to.</p>\n            </div>\n            <div className=\"col checkbox-options\">\n              {industries.map((industry_name, idx) => {\n                return (\n                  <div\n                    key={industry_name}\n                    className=\"form-check col form-check-inline\"\n                  >\n                    <input\n                      className=\"form-check-input industry-checkbox\"\n                      id={industry_name + idx}\n                      type=\"checkbox\"\n                      name=\"industry\"\n                      value={industry_name}\n                      onClick={this.handleCheckboxIndustry}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor={industry_name + idx}\n                    >\n                      {industry_name}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n            <Button\n              className=\"col-1\"\n              bsPrefix=\"job-btn \"\n              onClick={e => {\n                this.setState({ industry: [] });\n                Array.from(\n                  document.getElementsByClassName('industry-checkbox')\n                ).map(checkbox => (checkbox.checked = false));\n              }}\n            >\n              Clear All\n            </Button>\n          </div>\n        ) : null}\n        {careers.length != 0 ? (\n          <div className=\"career-checkboxes row\">\n            <div className=\"col\">\n              <h3 className=\"row\">Career Development Opportunities:</h3>\n              <p className=\"row\">\n                Develop your skills and get resources needed for your next job\n              </p>\n            </div>\n            <div className=\"col checkbox-options\">\n              {careers.map((career, idx) => {\n                return (\n                  <div\n                    key={career}\n                    className=\"form-check col form-check-inline\"\n                  >\n                    <input\n                      className=\"form-check-input career-checkbox\"\n                      id={career + idx}\n                      type=\"checkbox\"\n                      name=\"career\"\n                      value={career}\n                      onClick={this.handleCheckboxCareer}\n                    />\n                    <label className=\"form-check-label\" htmlFor={career + idx}>\n                      {career.toUpperCase()}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n            <Button\n              className=\"col-1\"\n              bsPrefix=\"job-btn\"\n              onClick={e => {\n                this.setState({ careers: [] });\n                Array.from(\n                  document.getElementsByClassName('career-checkbox')\n                ).map(checkbox => (checkbox.checked = false));\n              }}\n            >\n              Clear All\n            </Button>\n          </div>\n        ) : null}\n        {jobTypes.length != 0 ? (\n          <div className=\"JobType-checkboxes row\">\n            <div className=\"col\">\n              <h3 className=\"row\">Job Type:</h3>\n              <h3 className=\"row\">Paid opportunities' Type</h3>\n            </div>\n            <div className=\"col checkbox-options\">\n              {jobTypes.map((jobType, idx) => {\n                return (\n                  <div\n                    key={jobType}\n                    className=\"form-check col form-check-inline\"\n                  >\n                    <input\n                      className=\"form-check-input JobType-checkbox\"\n                      id={jobType + idx}\n                      type=\"checkbox\"\n                      name=\"JobType\"\n                      value={jobType}\n                      onClick={this.handleCheckboxJobType}\n                    />\n                    <label className=\"form-check-label\" htmlFor={jobType + idx}>\n                      {jobType.toUpperCase()}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n            <Button\n              className=\"col-1\"\n              bsPrefix=\"job-btn\"\n              onClick={e => {\n                this.setState({ JobTypes: [] });\n                Array.from(\n                  document.getElementsByClassName('JobType-checkbox')\n                ).map(checkbox => (checkbox.checked = false));\n              }}\n            >\n              Clear All\n            </Button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n  render() {\n    return (\n      <div className=\"job-body\">\n        <div\n          className=\"Job-Heading\"\n          style={{ textAlign: 'left', fontSize: '64px' }}\n        >\n          <h1>Sustainable Jobs Center</h1>\n          <a href=\"https://us4.list-manage.com/contact-form?u=51eb002c7ef49ac4bf7de17e2&form_id=c58d36b6f54bd9b975ec2607253190d2\">\n            <Button bsPrefix=\"job-btn\">\n              Are you an employer? To submit a job posting, click here.\n            </Button>\n          </a>\n        </div>\n        {this.getSearch()}\n        <div className=\"job-container\">\n          {this.displayFilters()}\n          {this.displayJobs()}\n          <iframe\n            src=\"https://calendar.google.com/calendar/embed?src=fgv68k6tk5ji5sr4jjiuc2q90k%40group.calendar.google.com&ctz=America%2FNew_York\"\n            style={{\n              border: 0,\n              width: '100%',\n              height: '75vh',\n              display: 'inline-flex'\n            }}\n            frameBorder=\"0\"\n            scrolling=\"no\"\n          ></iframe>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EducationJobs;\n","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/ReportIssue.js",["134","135","136","137","138","139"],"import { Component } from 'react';\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nclass ReportIssue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notInitial: false,\n      name: '',\n      email: '',\n      title: '',\n      type: 'Community',\n      description: '',\n      validated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  validateFields() {\n    this.setState({ notInitial: true });\n    return (\n      this.validateName() &&\n      this.validateEmail() &&\n      this.validateTitle() &&\n      this.validateDescription()\n    );\n  }\n\n  validateName() {\n    return this.state.name.includes(' ');\n  }\n\n  validateEmail() {\n    var reg = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/;\n    return reg.test(this.state.email.toLowerCase());\n  }\n\n  validateTitle() {\n    return this.state.title != '';\n  }\n\n  validateDescription() {\n    return this.state.description != '';\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.validateFields()) {\n      let issue = {\n        name: this.state.name,\n        email: this.state.email,\n        title: this.state.title,\n        type: this.state.type,\n        description: this.state.description\n      };\n      this.props.addIssue(issue);\n      this.setState({\n        notInitial: false,\n        name: '',\n        email: '',\n        title: '',\n        type: 'Community',\n        description: ''\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <br />\n        <Form\n          noValidate\n          validated={this.state.validated}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"First Last\"\n              isInvalid={this.state.notInitial && !this.validateName()}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a first and last name (Include a space)\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlInput2\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              type=\"email\"\n              placeholder=\"name@example.com\"\n              isInvalid={this.state.notInitial && !this.validateEmail()}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid email\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Issue Type</Form.Label>\n            <Form.Control\n              name=\"type\"\n              defaultValue={'Community'}\n              onChange={this.handleChange}\n              as=\"select\"\n            >\n              <option value={'Community'}>Community</option>\n              <option value={'Housing'}>Housing</option>\n              <option value={'Personal'}>Personal</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlInput3\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              name=\"title\"\n              value={this.state.title}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"Title\"\n              isInvalid={this.state.notInitial && !this.validateTitle()}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please include a title for your issue\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              name=\"description\"\n              value={this.state.description}\n              onChange={this.handleChange}\n              as=\"textarea\"\n              rows=\"3\"\n              isInvalid={this.state.notInitial && !this.validateDescription()}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a description of your issue\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n        <button\n          variant=\"primary\"\n          type=\"submit\"\n          value=\"submit\"\n          onClick={this.handleSubmit}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ReportIssue;\n","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/ViewIssues.js",["140"],"import { Component } from 'react';\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\n\nclass ViewIssues extends Component {\n  constructor(props) {\n    super(props);\n\n    this.delete = this.delete.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getIssues();\n  }\n\n  delete(issue) {\n    this.props.delete(issue);\n  }\n  isLoggedInHeader() {\n    if (this.props.loggedIn) {\n      return (\n        <tr>\n          <th> Name </th>\n          <th> Email </th>\n          <th> Category </th>\n          <th> Title </th>\n          <th> Description </th>\n          <th> Date </th>\n          <th> Delete? </th>\n        </tr>\n      );\n    } else {\n      return (\n        <tr>\n          <th> Title </th>\n          <th> Description </th>\n        </tr>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Table>\n        <thead>{this.isLoggedInHeader()}</thead>\n        <tbody>\n          {this.props.issues.map(issue => {\n            if (this.props.loggedIn) {\n              return (\n                <tr>\n                  <td> {issue.name} </td>\n                  <td> {issue.email} </td>\n                  <td> {issue.type} </td>\n                  <td> {issue.title} </td>\n                  <td> {issue.description} </td>\n                  <td> {issue.date} </td>\n                  <td>\n                    <button onClick={() => this.delete(issue)}>Delete</button>\n                  </td>\n                </tr>\n              );\n            } else if (issue.type === 'Community') {\n              return (\n                <tr>\n                  <td> {issue.title} </td>\n                  <td> {issue.description} </td>\n                </tr>\n              );\n            }\n          })}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default ViewIssues;\n","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/components/News/Events.js",["141","142"],"import React from 'react';\nimport logo from '../../assets/images/logo.png';\nimport { getEvents } from '../../helpers/api';\nclass Events extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 0,\n      events: []\n    };\n  }\n\n  componentDidMount() {\n    getEvents().then(req => {\n      this.setState({ events: req.data });\n    });\n  }\n\n  _getDateFormatted(date) {\n    const monthNames = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ];\n\n    var mm = date.getMonth();\n    var dd = date.getDate();\n\n    return [monthNames[mm], (dd > 9 ? '' : '0') + dd].join('-');\n  }\n\n  render() {\n    const EVENTS_PER_PAGE = 3;\n    return (\n      <div>\n        <h1 className=\"Events-heading\">Events</h1>\n        <h2 className=\"Events-heading\">Upcoming Events</h2>\n        <div className=\"Events\">\n          {this.state.events.length != 0 ? (\n            this.state.events\n              .slice(\n                EVENTS_PER_PAGE * this.state.currentPage,\n                EVENTS_PER_PAGE * this.state.currentPage + EVENTS_PER_PAGE\n              )\n              .map((event, idx) => (\n                <div className=\"row event\" key={event.title + idx}>\n                  <img className=\"col-2 event-date\" src={event.image || logo} />\n\n                  <div className=\"col-6 event-info\">\n                    <h2>{event.title}</h2>\n                    <h3> {this._getDateFormatted(new Date(event.date))}</h3>\n                    <p>{event.description}</p>\n                  </div>\n                </div>\n              ))\n          ) : (\n            <h4 className=\"Events-heading justify-content-md-center row\">\n              <u>No Upcoming Events comeback later !!!</u>\n            </h4>\n          )}\n        </div>\n        <div className=\"Event-btns row justify-content-md-center \">\n          <div\n            className=\"left-arrow col\"\n            onClick={() =>\n              this.setState({\n                currentPage: Math.max(this.state.currentPage - 1, 0)\n              })\n            }\n          >\n            ◀\n          </div>\n          <div className=\"pageNumber col\">{this.state.currentPage + 1}</div>\n          <div\n            className=\"right-arrow col\"\n            onClick={() => {\n              this.setState({\n                currentPage: Math.min(\n                  this.state.currentPage + 1,\n                  Math.ceil(this.state.events.length / EVENTS_PER_PAGE) - 1\n                )\n              });\n            }}\n          >\n            ▶\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Events;\n","/home/sim/Documents/EcoDistricts-Hampton-Roads/frontend/src/helpers/api.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":13},{"ruleId":"147","severity":1,"message":"151","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":17},{"ruleId":"147","severity":1,"message":"152","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":12},{"ruleId":"147","severity":1,"message":"153","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":12},{"ruleId":"154","severity":1,"message":"155","line":54,"column":11,"nodeType":"156","endLine":54,"endColumn":45},{"ruleId":"157","severity":1,"message":"158","line":7,"column":3,"nodeType":"159","messageId":"160","endLine":9,"endColumn":4},{"ruleId":"147","severity":1,"message":"161","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":13},{"ruleId":"157","severity":1,"message":"158","line":8,"column":3,"nodeType":"159","messageId":"160","endLine":10,"endColumn":4},{"ruleId":"154","severity":1,"message":"155","line":32,"column":11,"nodeType":"156","endLine":32,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":60,"column":13,"nodeType":"156","endLine":60,"endColumn":48},{"ruleId":"162","severity":1,"message":"163","line":53,"column":35,"nodeType":"164","messageId":"165","endLine":53,"endColumn":37},{"ruleId":"154","severity":1,"message":"155","line":61,"column":19,"nodeType":"156","endLine":61,"endColumn":80},{"ruleId":"147","severity":1,"message":"166","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":12},{"ruleId":"154","severity":1,"message":"155","line":57,"column":11,"nodeType":"156","endLine":57,"endColumn":72},{"ruleId":"157","severity":1,"message":"158","line":10,"column":3,"nodeType":"159","messageId":"160","endLine":12,"endColumn":4},{"ruleId":"147","severity":1,"message":"167","line":15,"column":9,"nodeType":"149","messageId":"150","endLine":15,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":7,"column":3,"nodeType":"159","messageId":"160","endLine":9,"endColumn":4},{"ruleId":"147","severity":1,"message":"168","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":15},{"ruleId":"147","severity":1,"message":"161","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":13},{"ruleId":"147","severity":1,"message":"169","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":24},{"ruleId":"147","severity":1,"message":"170","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":24},{"ruleId":"147","severity":1,"message":"171","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":24},{"ruleId":"147","severity":1,"message":"172","line":17,"column":8,"nodeType":"149","messageId":"150","endLine":17,"endColumn":16},{"ruleId":"147","severity":1,"message":"173","line":18,"column":8,"nodeType":"149","messageId":"150","endLine":18,"endColumn":18},{"ruleId":"154","severity":1,"message":"155","line":263,"column":25,"nodeType":"156","endLine":275,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":315,"column":13,"nodeType":"156","endLine":325,"endColumn":15},{"ruleId":"154","severity":1,"message":"155","line":510,"column":19,"nodeType":"156","endLine":510,"endColumn":73},{"ruleId":"154","severity":1,"message":"155","line":516,"column":19,"nodeType":"156","endLine":516,"endColumn":72},{"ruleId":"154","severity":1,"message":"155","line":522,"column":19,"nodeType":"156","endLine":522,"endColumn":71},{"ruleId":"147","severity":1,"message":"161","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":32,"column":7,"nodeType":"176","messageId":"165","endLine":32,"endColumn":15},{"ruleId":"177","severity":1,"message":"178","line":60,"column":11,"nodeType":"149","messageId":"179","endLine":60,"endColumn":22},{"ruleId":"177","severity":1,"message":"180","line":73,"column":11,"nodeType":"149","messageId":"179","endLine":73,"endColumn":22},{"ruleId":"177","severity":1,"message":"181","line":86,"column":11,"nodeType":"149","messageId":"179","endLine":86,"endColumn":21},{"ruleId":"177","severity":1,"message":"181","line":97,"column":11,"nodeType":"149","messageId":"179","endLine":97,"endColumn":21},{"ruleId":"182","severity":1,"message":"183","line":101,"column":3,"nodeType":"159","messageId":"165","endLine":113,"endColumn":4},{"ruleId":"177","severity":1,"message":"178","line":110,"column":11,"nodeType":"149","messageId":"179","endLine":110,"endColumn":22},{"ruleId":"162","severity":1,"message":"184","line":152,"column":34,"nodeType":"164","messageId":"165","endLine":152,"endColumn":36},{"ruleId":"162","severity":1,"message":"184","line":158,"column":34,"nodeType":"164","messageId":"165","endLine":158,"endColumn":36},{"ruleId":"162","severity":1,"message":"184","line":164,"column":34,"nodeType":"164","messageId":"165","endLine":164,"endColumn":36},{"ruleId":"162","severity":1,"message":"184","line":170,"column":33,"nodeType":"164","messageId":"165","endLine":170,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":195,"column":30,"nodeType":"164","messageId":"165","endLine":195,"endColumn":32},{"ruleId":"162","severity":1,"message":"163","line":296,"column":27,"nodeType":"164","messageId":"165","endLine":296,"endColumn":29},{"ruleId":"162","severity":1,"message":"163","line":344,"column":26,"nodeType":"164","messageId":"165","endLine":344,"endColumn":28},{"ruleId":"162","severity":1,"message":"163","line":394,"column":28,"nodeType":"164","messageId":"165","endLine":394,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":439,"column":25,"nodeType":"164","messageId":"165","endLine":439,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":483,"column":26,"nodeType":"164","messageId":"165","endLine":483,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":546,"column":11,"nodeType":"156","endLine":556,"endColumn":12},{"ruleId":"147","severity":1,"message":"187","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":14},{"ruleId":"147","severity":1,"message":"161","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":39,"column":32,"nodeType":"190","messageId":"191","endLine":39,"endColumn":33,"suggestions":"192"},{"ruleId":"188","severity":1,"message":"189","line":39,"column":85,"nodeType":"190","messageId":"191","endLine":39,"endColumn":86,"suggestions":"193"},{"ruleId":"162","severity":1,"message":"163","line":44,"column":29,"nodeType":"164","messageId":"165","endLine":44,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":48,"column":35,"nodeType":"164","messageId":"165","endLine":48,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":47,"column":40,"nodeType":"196","messageId":"197","endLine":47,"endColumn":42},{"ruleId":"162","severity":1,"message":"163","line":48,"column":37,"nodeType":"164","messageId":"165","endLine":48,"endColumn":39},{"ruleId":"154","severity":1,"message":"155","line":56,"column":19,"nodeType":"156","endLine":56,"endColumn":81},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'hot' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'logo' is defined but never used.","'Land' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Form' is defined but never used.","'images' is assigned a value but never used.","'Image' is defined but never used.","'other_carousel_2' is defined but never used.","'other_carousel_3' is defined but never used.","'other_carousel_4' is defined but never used.","'about_us' is defined but never used.","'what_we_do' is defined but never used.","no-dupe-keys","Duplicate key 'location'.","ObjectExpression","no-redeclare","'newLocation' is already defined.","redeclared","'newIndustry' is already defined.","'newJobType' is already defined.","no-dupe-class-members","Duplicate name 'handleCheckboxLocation'.","Expected '===' and instead saw '=='.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Button' is defined but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["200","201"],["202","203"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"messageId":"204","fix":"205","desc":"206"},{"messageId":"207","fix":"208","desc":"209"},{"messageId":"204","fix":"210","desc":"206"},{"messageId":"207","fix":"211","desc":"209"},"removeEscape",{"range":"212","text":"213"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"214","text":"215"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"216","text":"213"},{"range":"217","text":"215"},[867,868],"",[867,867],"\\",[920,921],[920,920]]