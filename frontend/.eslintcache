[{"/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/index.js":"1","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/AppContainer.js":"2","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Header.js":"3","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/ProjectStatus/ProjectStatus.js":"4","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/News/News.js":"5","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/Issue.js":"6","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/ProjectStatus/ProjectPage.js":"7","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Article/Article.js":"8","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/About/MeetTheTeam.js":"9","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Resource/Resource.js":"10","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/About/About.js":"11","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Surveys/Surveys.js":"12","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Land.js":"13","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/EducationJobs/EducationJobs.js":"14","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/News/Events.js":"15","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/ReportIssue.js":"16","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/ViewIssues.js":"17","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/helpers/api.js":"18"},{"size":311,"mtime":1612284911684,"results":"19","hashOfConfig":"20"},{"size":1944,"mtime":1609904461037,"results":"21","hashOfConfig":"20"},{"size":3374,"mtime":1610501777608,"results":"22","hashOfConfig":"20"},{"size":3524,"mtime":1609944537720,"results":"23","hashOfConfig":"20"},{"size":2862,"mtime":1610500145020,"results":"24","hashOfConfig":"20"},{"size":370,"mtime":1609904461041,"results":"25","hashOfConfig":"20"},{"size":2826,"mtime":1609904461041,"results":"26","hashOfConfig":"20"},{"size":1616,"mtime":1610500115761,"results":"27","hashOfConfig":"20"},{"size":5350,"mtime":1610500091937,"results":"28","hashOfConfig":"20"},{"size":3859,"mtime":1609944486659,"results":"29","hashOfConfig":"20"},{"size":1579,"mtime":1612277235279,"results":"30","hashOfConfig":"20"},{"size":2337,"mtime":1609911757556,"results":"31","hashOfConfig":"20"},{"size":35011,"mtime":1612285693823,"results":"32","hashOfConfig":"20"},{"size":19517,"mtime":1610486891040,"results":"33","hashOfConfig":"20"},{"size":2691,"mtime":1610500127541,"results":"34","hashOfConfig":"20"},{"size":4889,"mtime":1609904461041,"results":"35","hashOfConfig":"20"},{"size":1766,"mtime":1609904461041,"results":"36","hashOfConfig":"20"},{"size":1532,"mtime":1609942433783,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oozm3u",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/index.js",[],"/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/AppContainer.js",["86"],"import React, { Component } from 'react';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport '../assets/stylesheets/app.css';\nimport { hot } from 'react-hot-loader';\n\nimport Header from './Header';\n// import Footer from './Footer';\nimport Land from './Land';\nimport Issue from './Issue/Issue';\nimport EducationJobs from './EducationJobs/EducationJobs';\nimport ProjectStatus from './ProjectStatus/ProjectStatus';\nimport ProjectPage from './ProjectStatus/ProjectPage';\nimport News from './News/News';\nimport Article from './Article/Article';\nimport Surveys from './Surveys/Surveys';\nimport About from './About/About';\nimport Resource from './Resource/Resource';\nimport MeetTheTeam from './About/MeetTheTeam';\n\nclass AppContainer extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"Head\">\n          <Header />\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <Switch>\n                <Route exact path=\"/\" component={Land} />\n                <Route path=\"/issues\" component={Issue} />\n                <Route path=\"/opportunities\" component={EducationJobs} />\n                <Route path=\"/projectstatus\" component={ProjectStatus} />\n                <Route path=\"/surveys\" component={Surveys} />\n                <Route exact path=\"/news\" component={News} />\n                <Route path=\"/news/:id\" component={Article} />\n                <Route path=\"/Project/:id\" component={ProjectPage} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/team\" component={MeetTheTeam} />\n                <Route path=\"/resources\" component={Resource} />\n                <Route component={Land} />\n              </Switch>\n              {/* <div className=\"col-sm-10 offset-md-1\"></div> */}\n            </div>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n// hot(module)\nexport default AppContainer;\n",["87","88"],"/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Header.js",["89","90","91","92"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport icon from \"../assets/images/icon.png\";\nimport brand from \"../assets/images/Brand1.png\";\nimport Land from \"./Land\";\n\nimport \"../assets/stylesheets/app.css\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  componentDidMount() {}\n\n  isLoggedIn() {\n    switch (this.props.user) {\n      case null:\n        return \"still deciding\";\n      case false:\n        return (\n          <Nav.Item>\n            <a href={\"/api/auth/google/get\"}>Admin? Log in here</a>\n          </Nav.Item>\n        );\n      default:\n        return (\n          <Nav.Item>\n            <a href={\"/api/auth/logout\"}>Log Out</a>\n          </Nav.Item>\n        );\n    }\n  }\n\n  email() {\n    if (this.props.user)\n      return (\n        <Nav.Item>\n          <Nav.Link eventKey=\"8\" as={Link} to=\"/email\">\n            Add Admin Email\n          </Nav.Link>\n        </Nav.Item>\n      );\n  }\n\n  render() {\n    const CONTACT_US_LINK =\n      \"https://us4.list-manage.com/contact-form?u=51eb002c7ef49ac4bf7de17e2&form_id=c58d36b6f54bd9b975ec2607253190d2\";\n    return (\n      <Navbar collapseOnSelect expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <img id=\"navbar-logo\" src={brand}></img>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n            {/* <Nav className=\"mr-auto\"> */}\n            <NavDropdown\n              onMouseEnter={() => {\n                this.setState({ isOpen: true });\n              }}\n              onMouseLeave={() => {\n                this.setState({ isOpen: false });\n              }}\n              open={this.state.isOpen}\n              title=\"About\"\n              id=\"basic-nav-dropdown\"\n            >\n              <Nav.Item>\n                <Nav.Link eventKey=\"1\" as={Link} to=\"/about\">\n                  About Eco\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"9\" as={Link} to=\"/team\">\n                  Meet the Team\n                </Nav.Link>\n              </Nav.Item>\n            </NavDropdown>\n            <Nav.Item>\n              <Nav.Link eventKey=\"2\" as={Link} to=\"/news\">\n                News\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"4\" as={Link} to=\"/surveys\">\n                Surveys\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"5\" as={Link} to=\"/opportunities\">\n                Jobs\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"6\" as={Link} to=\"/resources\">\n                Resources\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"7\" as={Link} to=\"/projectstatus\">\n                Projects\n              </Nav.Link>\n            </Nav.Item>\n\n\n            <Nav.Item>\n              <a className=\"nav-link\" href={CONTACT_US_LINK}>\n                Contact Us\n              </a>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/ProjectStatus/ProjectStatus.js",[],"/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/News/News.js",["93","94"],"import { Component } from 'react';\nimport React from 'react';\n\nimport Events from './Events';\nimport '../../assets/stylesheets/app.css';\nimport icon from '../../assets/images/icon.png';\nimport { getNews } from '../../helpers/api';\nclass News extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notInitial: false,\n      news: [],\n      currentPage: 0\n    };\n  }\n  _getDateFormatted(date) {\n    const monthNames = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ];\n\n    var mm = date.getMonth();\n    var dd = date.getDate();\n\n    return [monthNames[mm], (dd > 9 ? '' : '0') + dd].join('-');\n  }\n  componentDidMount() {\n    getNews().then(req => {\n      this.setState({ news: req.data });\n    });\n  }\n\n  render() {\n    const NEWS_PER_PAGE = 3;\n    return (\n      <div className=\"news-page\">\n        <Events />\n        {this.props.user ? this.loggedIn() : null}\n        <h1 className=\"Events-heading\">News</h1>\n        <h2 className=\"Events-heading\">Upcoming News</h2>\n        <div className=\"Events\">\n          {this.state.news.length != 0 ? (\n            this.state.news\n              .slice(\n                NEWS_PER_PAGE * this.state.currentPage,\n                NEWS_PER_PAGE * this.state.currentPage + NEWS_PER_PAGE\n              )\n              .map((news, idx) => (\n                <div className=\"row event\" key={news.title + idx}>\n                  <img className=\"col-2 event-date\" src={news.image || icon} />\n\n                  <div className=\"col-6 event-info\">\n                    <h2>{news.title}</h2>\n                    <h3> {this._getDateFormatted(new Date(news.date))}</h3>\n                    <p>{news.description}</p>\n                  </div>\n                </div>\n              ))\n          ) : (\n            <h4 className=\"Events-heading justify-content-md-center row\">\n              <u>No News comeback later !!!</u>\n            </h4>\n          )}\n        </div>\n        <div className=\"Event-btns row justify-content-md-center \">\n          <div\n            className=\"left-arrow col\"\n            onClick={() =>\n              this.setState({\n                currentPage: Math.max(this.state.currentPage - 1, 0)\n              })\n            }\n          >\n            ◀\n          </div>\n          <div className=\"pageNumber col\">{this.state.currentPage + 1}</div>\n          <div\n            className=\"right-arrow col\"\n            onClick={() => {\n              this.setState({\n                currentPage: Math.min(\n                  this.state.currentPage + 1,\n                  Math.ceil(this.props.news.length / NEWS_PER_PAGE) - 1\n                )\n              });\n            }}\n          >\n            ▶\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default News;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/Issue.js",["95"],"import { Component } from 'react';\nimport React from 'react';\nimport ReportIssue from './ReportIssue';\nimport ViewIssues from './ViewIssues';\n\nclass Issue extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <ReportIssue />\n        <hr />\n        <ViewIssues />\n      </div>\n    );\n  }\n}\n\nexport default Issue;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/ProjectStatus/ProjectPage.js",["96","97","98","99"],"import { Component } from 'react';\nimport React from 'react';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport '../../assets/stylesheets/ProjectPage.css';\n\nclass ProjectPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"project-page\">\n        <div className=\" project-heading\">\n          <div>\n            <h1>Warfield Canal Project</h1>\n            <h2>Start Date: Oct 30,2020</h2>\n          </div>\n        </div>\n        <div className=\"project-row our-goal\">\n          <h1>Our goal</h1>\n          <p>\n            The initial aims of the proposed Warfield Canal project submitted\n            included chemical analysis, contamination assessment and evaluation,\n            community planning for restoration, clean up and beautification,\n            resource access and enhancement ( example ( a walkable pathway) and\n            designation as a potential Bird Estuary and Conservation Area ( due\n            to current bird habitat)\n          </p>\n        </div>\n        <div className=\"project-row\">\n          <img className=\"project-img-gal\" />\n        </div>\n        <div className=\"project-row potential-outcomes\">\n          <h1>Potential Outcomes</h1>\n          <p>\n            Potential Outcomes of the Project; (1) clean up, beautification and\n            restoration of the canal waterway and boundary area (2) pollution\n            prevention from stormwater and homeowner yard discharge (3)\n            elimination of a potential Environmental Justice issues and health\n            hazard (4) additional funding from Federal and State sources for\n            similar projects and further enhancement; (5) disignation as a Bird\n            Sanctuary or Conservation area.\n          </p>\n        </div>\n        <div className=\"\">\n          <div className=\"programs\">\n            <h2>More Info on similar programs</h2>\n          </div>\n          <div className=\"button-row\">\n            <Button>Planet Stewardship Project</Button>\n            <Button>Weather Ready Nation Program</Button>\n          </div>\n        </div>\n        <div className=\"project-row meet-team\">\n          <h1>Meet the Team!</h1>\n        </div>\n        <div className=\"project-row team\">\n          <div className=\"col \">\n            <img className=\"team-leader-img\" />\n            <h2>Team Lead</h2>\n          </div>\n          <p className=\"col\">\n            List of rest of team: <br />\n            Onson Sweemey <br />\n            Rey Mcsriff <br /> Mario Mcalwain <br />\n            Raul Chamgerlain <br /> Kevin Nogilny <br />\n            Jeromy Gridean <br /> Shown Furcom <br /> Mike Truk <br />\n            Tim Sandaelem <br />\n            Todd Bonzales\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ProjectPage;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Article/Article.js",[],"/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/About/MeetTheTeam.js",[],"/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Resource/Resource.js",["100"],"import { Component } from 'react';\nimport React from 'react';\nimport '../../assets/stylesheets/app.css';\n\nimport { Card } from 'react-bootstrap';\nclass Resource extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const RESOURCE_LINKS = [\n      {\n        link: 'https://play.google.com/store/apps/details?id=gov.nasa.globe.observer&hl=en',\n        name: 'Globe Observer',\n        image: 'https://play-lh.googleusercontent.com/2iBA5BkZ6G7G5idLd5RhMGNW1aC0kQ-MIKWe75cM0ub8PxXhevfu1rJWOt4--wGalA=s180',\n        description: 'GLOBE Observer invites you to make observations of the Earth around you. Observations you collect and submit with this app are designed to help scientists better understand satellite data collected. '\n      },\n\n      {\n        link: 'https://www.vims.edu/people/loftis_jd/Catch%20the%20King/index.php',\n        name: 'Sea Level Rise App',\n        image: 'https://play-lh.googleusercontent.com/2iBA5BkZ6G7G5idLd5RhMGNW1aC0kQ-MIKWe75cM0ub8PxXhevfu1rJWOt4--wGalA=s180',\n        // image: 'https://is1-ssl.mzstatic.com/image/thumb/Purple71/v4/c0/5f/34/c05f3446-d638-0fdc-e685-2935ebc3ef6b/mzl.ogzyxgyf.png/1200x630wa.png',\n        description: 'Get information about this global phenomena of Sea Level Rise and participate (as a volunteer) in capturing the data we need to better understand and solve the challenges it brings.'\n\n      },\n     \n    ];\n    const SECONDCHANCE_LINKS = [\n      {\n        link: 'thedreamcorps.org',\n        name: 'The Dreamcorps',\n        image: 'https://www.thedreamcorps.org/wp-content/themes/dreamcorps/dist/images/logo_7c9a110c.svg'\n      },\n      {\n        link: 'https://www.google.con',\n        name: 'Resource2',\n        image: 'https://i.imgur.com/ElWjENc.png'\n      },\n      {\n        link: 'https://www.google.con',\n        name: 'Resource3',\n        image: 'https://i.imgur.com/ElWjENc.png'\n      }\n    ];\n    return (\n      <div className=\"Resource-container\">\n        <h1 className=\"Resource-Heading\">Resources</h1>\n        <div className=\"Resource-body\">\n          <div className=\"Resource-text\">\n            Description Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n            Phasellus dapibus metus sit amet turpis finibus semper. Praesent eu\n            tortor tortor.\n          </div>\n          <br />\n          <div className=\"Resource-gallery\">\n            <div className=\"Resource-Heading\">Apps</div>\n            <div className=\"Resource-Grid row \">\n              {RESOURCE_LINKS.map(({ name, link, image, description }) => (\n                <a className=\"col-md-4 col-sm-12\" key={name} href={link}>\n                  <Card className=\"Resource-card\">\n                    <div className=\"card-heading\">\n                      <Card.Img\n                        className=\"Resource-img\"\n                        variant=\"top\"\n                        src={image}\n                      />\n                      <Card.Title className=\"Resource-Name\">{name}</Card.Title>\n                    </div>\n                    <Card.Body>\n                      <Card.Text>\n                        {description}\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </a>\n              ))}\n            </div>\n          </div>\n          <div className=\"Resource-row\">\n            <h1 className=\"Resource-Heading\">Second Chance Resources</h1>\n            <div className=\"Resource-text\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit\n            </div>\n            <ul>\n              {SECONDCHANCE_LINKS.map(({ name, link }) => (\n                <li key={name}>\n                  <a className=\"Resource-list\" href={link}>{name}</a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Resource;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/About/About.js",["101","102"],"/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Surveys/Surveys.js",["103","104"],"import { Component } from 'react';\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { getSurveys } from '../../helpers/api';\n// import focus_group from '../../assets/images/focus_group.png';\nimport futuresuburbs from '../../assets/images/survey-futuresuburbs.jpg';\n\nimport '../../assets/stylesheets/app.css';\n\nclass Surveys extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notInitial: false,\n      surveys: []\n    };\n  }\n\n  componentDidMount() {\n    getSurveys().then(req => {\n      this.setState({ surveys: req.data });\n    });\n  }\n\n  getSurveysList() {\n    return (\n      <div>\n        <div className=\"SurveyList\">\n          {this.state.surveys.map(survey => {\n            return (\n              <a key={survey.id} href={survey.link}>\n                <div className=\"Survey-elem\">\n                  <div className=\"Survey-value\"> {survey.title} </div>\n                </div>\n              </a>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n  getHeading() {\n    return (\n      <div>\n        <div className=\"Survey-Heading-div\">\n          Sign Up to Provide Us Feedback!\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Survey-container\">\n        {this.getHeading()}\n        <div className=\"row\">\n          <img className=\"col\" Style=\"width:50%\" src={futuresuburbs} />\n          <div className=\"col\">\n            <h1 className=\"row Survey-SubHeader\">\n              Cavalier Manor Study of Community Needs\n            </h1>\n            <h1 className=\"row focus-text\">\n              Help the Cavalier Manor area become sustainable, equitable,\n              resilient, and climate ready!\n            </h1>\n            <h1 className=\"row focus-text\">\n              Compensation will be a $20 Amazon Gift Card for a 90 minute\n              session.\n            </h1>\n            <h1 className=\"row focus-text\">\n              Cavalier Manor, Victory Park, and Crystal Lake Residents Only\n            </h1>\n          </div>\n        </div>\n        <div className=\"Survey-Body\">\n          <h1 className=\"Survey-Feedback\">Help Us Improve!</h1>\n          <h3>Please fill out our survey to help us improve the community</h3>\n          {this.getSurveysList()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Surveys;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Land.js",["105","106","107","108","109","110","111","112","113"],"/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/EducationJobs/EducationJobs.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import { Component } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport \"../../assets/stylesheets/JobsPage.css\";\nimport { getJobs } from \"../../helpers/api\";\nclass EducationJobs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentJob: null,\n      jobs: [],\n    };\n  }\n  render() {\n    return <Jobs />;\n  }\n}\n\nclass Jobs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      salary: 0,\n      industry: [],\n      location: [],\n      jobTypes: [],\n      careers: [],\n      location: [],\n      company: \"\",\n      jobs: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleCheckboxLocation = this.handleCheckboxLocation.bind(this);\n    this.handleCheckboxIndustry = this.handleCheckboxIndustry.bind(this);\n    this.handleChangeNumber = this.handleChangeNumber.bind(this);\n    this.handleCheckboxJobType = this.handleCheckboxJobType.bind(this);\n    this.handleCheckboxCareer = this.handleCheckboxCareer.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value.toLowerCase() });\n  }\n  handleChangeNumber(e) {\n    this.setState({ [e.target.name]: parseInt(e.target.value.toLowerCase()) });\n  }\n  handleCheckboxLocation(e) {\n    const location_name = e.target.value.toLowerCase();\n    if (this.state.location.includes(location_name)) {\n      var newLocation = [\n        ...this.state.location.filter(\n          (location) => !location.includes(location_name)\n        ),\n      ];\n    } else {\n      var newLocation = [...this.state.location, location_name];\n    }\n    this.setState({ location: newLocation });\n  }\n  handleCheckboxIndustry(e) {\n    const industry_name = e.target.value.toLowerCase();\n    if (this.state.industry.includes(industry_name)) {\n      var newIndustry = [\n        ...this.state.industry.filter(\n          (industry) => !industry.includes(industry_name)\n        ),\n      ];\n    } else {\n      var newIndustry = [...this.state.industry, industry_name];\n    }\n    this.setState({ industry: newIndustry });\n  }\n  handleCheckboxJobType(e) {\n    const jobType_value = e.target.value.toLowerCase();\n    if (this.state.jobTypes.includes(jobType_value)) {\n      var newJobType = [\n        ...this.state.jobTypes.filter(\n          (jobType) => !jobType.includes(jobType_value)\n        ),\n      ];\n    } else {\n      var newJobType = [...this.state.jobTypes, jobType_value];\n    }\n    this.setState({ jobTypes: newJobType });\n  }\n  handleCheckboxCareer(e) {\n    const career_value = e.target.value.toLowerCase();\n    if (this.state.careers.includes(career_value)) {\n      var newJobType = [\n        ...this.state.careers.filter(\n          (career) => !career.includes(career_value)\n        ),\n      ];\n    } else {\n      var newJobType = [...this.state.careers, career_value];\n    }\n    this.setState({ careers: newJobType });\n  }\n  handleCheckboxLocation(e) {\n    const location_name = e.target.value.toLowerCase();\n    if (this.state.location.includes(location_name)) {\n      var newLocation = [\n        ...this.state.location.filter(\n          (location) => !location.includes(location_name)\n        ),\n      ];\n    } else {\n      var newLocation = [...this.state.location, location_name];\n    }\n    this.setState({ location: newLocation });\n  }\n  handleSearch(e) {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value.toLowerCase() });\n  }\n\n  componentDidMount() {\n    getJobs().then((jobs) => {\n      this.setState({ jobs: jobs.data });\n      console.log(jobs.data);\n    });\n  }\n\n  _getDateFormatted(date) {\n    const monthNames = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n\n    var mm = date.getMonth();\n    var dd = date.getDate();\n    // date.get;\n\n    return [monthNames[mm], (dd > 9 ? \"\" : \"0\") + dd, date.getFullYear()].join(\n      \"-\"\n    );\n  }\n  _jobsIndustryIsChecked(job) {\n    return (\n      this.state.industry.length == 0 ||\n      this.state.industry.includes(job.industry.toLowerCase())\n    );\n  }\n  _jobsTypeIsChecked(job) {\n    return (\n      this.state.jobTypes.length == 0 ||\n      this.state.jobTypes.includes(job.jobType.toLowerCase())\n    );\n  }\n  _jobsLocationIsChecked(job) {\n    return (\n      this.state.location.length == 0 ||\n      this.state.location.includes(job.location.toLowerCase()) ||\n      // TODO: get rid of this hacky way\n      this.state.location.includes(\"\")\n    );\n  }\n  _jobsCareerIsChecked(job) {\n    return (\n      this.state.careers.length == 0 ||\n      this.state.careers.includes(job.career.toLowerCase())\n    );\n  }\n  filterJob(job) {\n    let search_filter_contains =\n      job.title && job.title.toLowerCase().includes(this.state.search);\n    search_filter_contains =\n      search_filter_contains ||\n      (job.description &&\n        job.description.toLowerCase().includes(this.state.search));\n\n    return (\n      search_filter_contains &&\n      this._jobsIndustryIsChecked(job) &&\n      this._jobsLocationIsChecked(job) &&\n      this._jobsTypeIsChecked(job) &&\n      this._jobsCareerIsChecked(job) &&\n      job.salary >= this.state.salary\n    );\n  }\n  displayJobs() {\n    const JOBS_TO_SHOW = this.state.jobs.filter((job) => this.filterJob(job));\n    return (\n      <div className=\"jobs card-columns \">\n        {JOBS_TO_SHOW.length != 0 ? (\n          JOBS_TO_SHOW.map((job) => {\n            return (\n              <a key={job._id} href={job._id}>\n                <Card className=\"job-elem col-4\" style={{ maxWidth: \"36rem\" }}>\n                  <div className=\"job-card-row\">\n                    <Card.Img\n                      className=\"job-card-img\"\n                      variant=\"top\"\n                      src=\"https://brands-cdn.employbridge.com/content/assets/news//40169262_14124173_Large.jpg\"\n                    />\n                    <Card.Title\n                      style={{\n                        padding: \"5%\",\n                        textOverflow: \"clip\",\n                        overflowWrap: \"break-word\",\n                        width: \"50%\",\n                      }}\n                    >\n                      {job.title || \"\"}\n                    </Card.Title>\n                  </div>\n                  <hr />\n                  <Card.Body>\n                    <Card.Text>\n                      {\"Posted on \" +\n                        this._getDateFormatted(new Date(job.published_at))}\n                    </Card.Text>\n                    <Card.Text>{\"@  \" + (job.company || \"\")} </Card.Text>\n                    <Card.Text>{\"$  \" + (job.salary || \"\")} </Card.Text>\n                    <Card.Text>{\"📍 \" + (job.location || \"\")} </Card.Text>\n\n                    <hr />\n                    <div\n                      className=\"job-card-row flex-center \"\n                      style={{ padding: \"5%\" }}\n                    >\n                      <Button\n                        onClick={(e) => {\n                          e.preventDefault();\n                          window.location.href = job.link;\n                        }}\n                      >\n                        Apply\n                      </Button>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </a>\n            );\n          })\n        ) : (\n          <div>\n            <div className=\"marquee\">\n              <h1>Didn't find any Jobs :(</h1>\n            </div>\n            <div className=\"marquee\">\n              <h1>Didn't find any Jobs :(</h1>\n            </div>\n            <div className=\"marquee\">\n              <h1>Didn't find any Jobs :(</h1>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  getSearch() {\n    return (\n      <Form className=\"Job-search row\" onSubmit={this.handleSearch}>\n        <Form.Group controlId=\"exampleForm.ControlInput1\" className=\"col-9\">\n          <Form.Control\n            name=\"search\"\n            value={this.state.search}\n            onChange={this.handleChange}\n            type=\"text\"\n            placeholder=\"Search\"\n          />\n        </Form.Group>\n        <Form.Group className=\"col-3\" controlId=\"Job Career\">\n          <Form.Control\n            name=\"location\"\n            onChange={this.handleCheckboxLocation}\n            as=\"select\"\n            placeholder=\"Select Job Career\"\n          >\n            <option value=\"\">ALL Location</option>\n\n            {[\n              \"Location 1\",\n              \"Location 2\",\n              \"Location 3\",\n              \"Location 3\",\n              \"Location 4\",\n              \"Location 5\",\n              \"Location 6\",\n            ].map((career) => (\n              <option value={career}>{career}</option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n  displayFilters() {\n    let filteredJobs = this.state.jobs;\n    // const locations = [\n    //   ...new Set(filteredJobs.map(job => job.location))\n    // ].sort();\n    // const salaries = [\n    //   ...new Set(filteredJobs.map(job => parseInt(job.salary)))\n    // ].sort(function(a, b) {\n    //   return a - b;\n    // });\n    // const industries = [\n    //   ...new Set(filteredJobs.map((job) => job.industry)),\n    // ].sort();\n    // const careers = [...new Set(filteredJobs.map(job => job.career))].sort();\n    // const jobTypes = [...new Set(filteredJobs.map(job => job.jobType))].sort();\n    const jobTypes = [\n      \"Job type: 1\",\n      \"Job type: 2\",\n      \"Job type: 3\",\n      \"Job type: 4\",\n      \"Job type: 5\",\n      \"Job type: 6\",\n    ];\n    const industries = [\n      \"Industry type: 1\",\n      \"Industry type: 2\",\n      \"Industry type: 3\",\n      \"Industry type: 4\",\n      \"Industry type: 5\",\n      \"Industry type: 6\",\n    ];\n    return (\n      <div className=\"grid-child job-filter-box \">\n        {industries.length != 0 ? (\n          <div className=\"industry-checkboxes row\">\n            <div className=\"col-3\">\n              <h3 className=\"row\">Industry:</h3>\n              <p className=\"row\">Which Industry Jobs belong to.</p>\n            </div>\n            {/* <div className=\"row\"></div> */}\n            <div className=\"col-9 checkbox-options\">\n              {industries.map((industry_name, idx) => {\n                return (\n                  <div\n                    key={industry_name}\n                    className=\"form-check col-4  form-check-inline\"\n                  >\n                    <input\n                      className=\"form-check-input industry-checkbox\"\n                      id={industry_name + idx}\n                      type=\"checkbox\"\n                      name=\"industry\"\n                      value={industry_name}\n                      onClick={this.handleCheckboxIndustry}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor={industry_name + idx}\n                    >\n                      {industry_name}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n            {/* <Button\n              className=\"col-1\"\n              bsPrefix=\"job-btn \"\n              onClick={(e) => {\n                this.setState({ industry: [] });\n                Array.from(\n                  document.getElementsByClassName(\"industry-checkbox\")\n                ).map((checkbox) => (checkbox.checked = false));\n              }}\n            >\n              Clear All\n            </Button> */}\n          </div>\n        ) : null}\n\n        {jobTypes.length != 0 ? (\n          <div className=\"JobType-checkboxes row\">\n            <div className=\"col-3\">\n              <h3 className=\"row\">Job Type:</h3>\n              <h3 className=\"row\">Paid opportunities' Type</h3>\n            </div>\n            <div className=\"col-9 checkbox-options\">\n              {jobTypes.map((jobType, idx) => {\n                return (\n                  <div\n                    key={jobType}\n                    className=\"form-check col-4 form-check-inline\"\n                  >\n                    <input\n                      className=\"form-check-input JobType-checkbox\"\n                      id={jobType + idx}\n                      type=\"checkbox\"\n                      name=\"JobType\"\n                      value={jobType}\n                      onClick={this.handleCheckboxJobType}\n                    />\n                    <label className=\"form-check-label\" htmlFor={jobType + idx}>\n                      {jobType}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n\n            {/* <Button\n              className=\"col-1\"\n              bsPrefix=\"job-btn\"\n              onClick={(e) => {\n                this.setState({ JobTypes: [] });\n                Array.from(\n                  document.getElementsByClassName(\"JobType-checkbox\")\n                ).map((checkbox) => (checkbox.checked = false));\n              }}\n            >\n              Clear All\n            </Button> */}\n          </div>\n        ) : null}\n      </div>\n    );\n\n    {\n      /* {careers.length != 0 ? (\n          <div className=\"career-checkboxes row\">\n            <div className=\"col\">\n              <h3 className=\"row\">Career Development Opportunities:</h3>\n              <p className=\"row\">\n                Develop your skills and get resources needed for your next job\n              </p>\n            </div>\n            <div className=\"col checkbox-options\">\n              {careers.map((career, idx) => {\n                return (\n                  <div\n                    key={career}\n                    className=\"form-check col form-check-inline\"\n                  >\n                    <input\n                      className=\"form-check-input career-checkbox\"\n                      id={career + idx}\n                      type=\"checkbox\"\n                      name=\"career\"\n                      value={career}\n                      onClick={this.handleCheckboxCareer}\n                    />\n                    <label className=\"form-check-label\" htmlFor={career + idx}>\n                      {career.toUpperCase()}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n            <Button\n              className=\"col-1\"\n              bsPrefix=\"job-btn\"\n              onClick={e => {\n                this.setState({ careers: [] });\n                Array.from(\n                  document.getElementsByClassName('career-checkbox')\n                ).map(checkbox => (checkbox.checked = false));\n              }}\n            >\n              Clear All\n            </Button>\n          </div>\n        ) : null} */\n    }\n    {\n      /* {locations.length != 0 ? (\n          <div className=\"location-checkboxes row\">\n            <div className=\"col\">\n              <h3 className=\"row\"> Locations:</h3>\n              <p className=\"row\">Location of the Jobs</p>\n            </div>\n\n            <div className=\"col checkbox-options\">\n              {locations.map((location_name, idx) => {\n                return (\n                  <div\n                    key={location_name}\n                    className=\"form-check col form-check-inline\"\n                  >\n                    <input\n                      className=\"form-check-input location-checkbox\"\n                      id={location_name + idx}\n                      type=\"checkbox\"\n                      name=\"location\"\n                      value={location_name}\n                      onClick={this.handleCheckboxLocation}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor={location_name + idx}\n                    >\n                      {location_name.toUpperCase()}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n\n            <Button\n              className=\"col-1\"\n              bsPrefix=\"job-btn\"\n              onClick={e => {\n                this.setState({ location: [] });\n                Array.from(\n                  document.getElementsByClassName('location-checkbox')\n                ).map(checkbox => (checkbox.checked = false));\n              }}\n            >\n              Clear All\n            </Button>\n          </div>\n        ) : null} */\n    }\n\n    {\n      /* {salaries.length != 0 ? (\n          <div className=\"salary-checkboxes row\">\n            <div className=\"col\">\n              <h3 className=\"row\"> Salary:</h3>\n              <p className=\"row\"> Annual Salary of Job</p>\n            </div>\n            <div className=\"col checkbox-options\">\n              {salaries.map((salary_value, idx) => {\n                return (\n                  <div\n                    key={salary_value}\n                    className=\"form-check col form-check-inline salary-checkbox\"\n                  >\n                    <input\n                      className=\"form-check-input\"\n                      id={salary_value + idx}\n                      type=\"radio\"\n                      name=\"salary\"\n                      value={salary_value}\n                      onClick={this.handleChangeNumber}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor={salary_value + idx}\n                    >\n                      {'$' + salary_value + '+'}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n            <div\n              key=\"AllSalaries\"\n              className=\"col-1 form-check form-check-inline\"\n            >\n              <input\n                className=\"form-check-input salary-checkbox\"\n                id=\"AllSalaries\"\n                type=\"radio\"\n                name=\"salary\"\n                value={0}\n                defaultChecked={true}\n                onClick={this.handleChangeNumber}\n              />\n              <label className=\"form-check-label\" htmlFor=\"AllSalaries\">\n                All Salaries\n              </label>\n            </div>\n          </div>\n        ) : null} */\n    }\n  }\n  render() {\n    return (\n      <div className=\"job-body\">\n        <div\n          className=\"Job-Heading\"\n          style={{ textAlign: \"left\", fontSize: \"64px\" }}\n        >\n          <h1>Sustainable Jobs Center</h1>\n          <a href=\"https://us4.list-manage.com/contact-form?u=51eb002c7ef49ac4bf7de17e2&form_id=c58d36b6f54bd9b975ec2607253190d2\">\n            <Button bsPrefix=\"job-btn\">\n              Are you an employer? To submit a job posting, click here.\n            </Button>\n          </a>\n        </div>\n        {this.getSearch()}\n        <div className=\"job-container\">\n          {this.displayFilters()}\n          {this.displayJobs()}\n          <iframe\n            src=\"https://calendar.google.com/calendar/embed?src=fgv68k6tk5ji5sr4jjiuc2q90k%40group.calendar.google.com&ctz=America%2FNew_York\"\n            style={{\n              border: 0,\n              width: \"100%\",\n              height: \"75vh\",\n              display: \"inline-flex\",\n            }}\n            frameBorder=\"0\"\n            scrolling=\"no\"\n          ></iframe>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EducationJobs;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/News/Events.js",["137","138"],"import React from 'react';\nimport icon from '../../assets/images/icon.png';\nimport { getEvents } from '../../helpers/api';\nclass Events extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 0,\n      events: []\n    };\n  }\n\n  componentDidMount() {\n    getEvents().then(req => {\n      this.setState({ events: req.data });\n    });\n  }\n\n  _getDateFormatted(date) {\n    const monthNames = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ];\n\n    var mm = date.getMonth();\n    var dd = date.getDate();\n\n    return [monthNames[mm], (dd > 9 ? '' : '0') + dd].join('-');\n  }\n\n  render() {\n    const EVENTS_PER_PAGE = 3;\n    return (\n      <div>\n        <h1 className=\"Events-heading\">Events</h1>\n        <h2 className=\"Events-heading\">Upcoming Events</h2>\n        <div className=\"Events\">\n          {this.state.events.length != 0 ? (\n            this.state.events\n              .slice(\n                EVENTS_PER_PAGE * this.state.currentPage,\n                EVENTS_PER_PAGE * this.state.currentPage + EVENTS_PER_PAGE\n              )\n              .map((event, idx) => (\n                <div className=\"row event\" key={event.title + idx}>\n                  <img className=\"col-2 event-date\" src={event.image || icon} />\n\n                  <div className=\"col-6 event-info\">\n                    <h2>{event.title}</h2>\n                    <h3> {this._getDateFormatted(new Date(event.date))}</h3>\n                    <p>{event.description}</p>\n                  </div>\n                </div>\n              ))\n          ) : (\n            <h4 className=\"Events-heading justify-content-md-center row\">\n              <u>No Upcoming Events comeback later !!!</u>\n            </h4>\n          )}\n        </div>\n        <div className=\"Event-btns row justify-content-md-center \">\n          <div\n            className=\"left-arrow col\"\n            onClick={() =>\n              this.setState({\n                currentPage: Math.max(this.state.currentPage - 1, 0)\n              })\n            }\n          >\n            ◀\n          </div>\n          <div className=\"pageNumber col\">{this.state.currentPage + 1}</div>\n          <div\n            className=\"right-arrow col\"\n            onClick={() => {\n              this.setState({\n                currentPage: Math.min(\n                  this.state.currentPage + 1,\n                  Math.ceil(this.state.events.length / EVENTS_PER_PAGE) - 1\n                )\n              });\n            }}\n          >\n            ▶\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Events;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/ReportIssue.js",["139","140","141","142","143","144"],"import { Component } from 'react';\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nclass ReportIssue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notInitial: false,\n      name: '',\n      email: '',\n      title: '',\n      type: 'Community',\n      description: '',\n      validated: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  validateFields() {\n    this.setState({ notInitial: true });\n    return (\n      this.validateName() &&\n      this.validateEmail() &&\n      this.validateTitle() &&\n      this.validateDescription()\n    );\n  }\n\n  validateName() {\n    return this.state.name.includes(' ');\n  }\n\n  validateEmail() {\n    var reg = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/;\n    return reg.test(this.state.email.toLowerCase());\n  }\n\n  validateTitle() {\n    return this.state.title != '';\n  }\n\n  validateDescription() {\n    return this.state.description != '';\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.validateFields()) {\n      let issue = {\n        name: this.state.name,\n        email: this.state.email,\n        title: this.state.title,\n        type: this.state.type,\n        description: this.state.description\n      };\n      this.props.addIssue(issue);\n      this.setState({\n        notInitial: false,\n        name: '',\n        email: '',\n        title: '',\n        type: 'Community',\n        description: ''\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <br />\n        <Form\n          noValidate\n          validated={this.state.validated}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"First Last\"\n              isInvalid={this.state.notInitial && !this.validateName()}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a first and last name (Include a space)\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlInput2\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              type=\"email\"\n              placeholder=\"name@example.com\"\n              isInvalid={this.state.notInitial && !this.validateEmail()}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid email\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Issue Type</Form.Label>\n            <Form.Control\n              name=\"type\"\n              defaultValue={'Community'}\n              onChange={this.handleChange}\n              as=\"select\"\n            >\n              <option value={'Community'}>Community</option>\n              <option value={'Housing'}>Housing</option>\n              <option value={'Personal'}>Personal</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlInput3\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              name=\"title\"\n              value={this.state.title}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"Title\"\n              isInvalid={this.state.notInitial && !this.validateTitle()}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please include a title for your issue\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              name=\"description\"\n              value={this.state.description}\n              onChange={this.handleChange}\n              as=\"textarea\"\n              rows=\"3\"\n              isInvalid={this.state.notInitial && !this.validateDescription()}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a description of your issue\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n        <button\n          variant=\"primary\"\n          type=\"submit\"\n          value=\"submit\"\n          onClick={this.handleSubmit}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ReportIssue;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/components/Issue/ViewIssues.js",["145"],"import { Component } from 'react';\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\n\nclass ViewIssues extends Component {\n  constructor(props) {\n    super(props);\n\n    this.delete = this.delete.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getIssues();\n  }\n\n  delete(issue) {\n    this.props.delete(issue);\n  }\n  isLoggedInHeader() {\n    if (this.props.loggedIn) {\n      return (\n        <tr>\n          <th> Name </th>\n          <th> Email </th>\n          <th> Category </th>\n          <th> Title </th>\n          <th> Description </th>\n          <th> Date </th>\n          <th> Delete? </th>\n        </tr>\n      );\n    } else {\n      return (\n        <tr>\n          <th> Title </th>\n          <th> Description </th>\n        </tr>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Table>\n        <thead>{this.isLoggedInHeader()}</thead>\n        <tbody>\n          {this.props.issues.map(issue => {\n            if (this.props.loggedIn) {\n              return (\n                <tr>\n                  <td> {issue.name} </td>\n                  <td> {issue.email} </td>\n                  <td> {issue.type} </td>\n                  <td> {issue.title} </td>\n                  <td> {issue.description} </td>\n                  <td> {issue.date} </td>\n                  <td>\n                    <button onClick={() => this.delete(issue)}>Delete</button>\n                  </td>\n                </tr>\n              );\n            } else if (issue.type === 'Community') {\n              return (\n                <tr>\n                  <td> {issue.title} </td>\n                  <td> {issue.description} </td>\n                </tr>\n              );\n            }\n          })}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default ViewIssues;\n","/home/sim/Documents/H4Impact/EcoDistricts-Hampton-Roads/frontend/src/helpers/api.js",[],{"ruleId":"146","severity":1,"message":"147","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":13},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"146","severity":1,"message":"154","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":17},{"ruleId":"146","severity":1,"message":"155","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":12},{"ruleId":"146","severity":1,"message":"156","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":12},{"ruleId":"157","severity":1,"message":"158","line":54,"column":11,"nodeType":"159","endLine":54,"endColumn":45},{"ruleId":"160","severity":1,"message":"161","line":53,"column":35,"nodeType":"162","messageId":"163","endLine":53,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":61,"column":19,"nodeType":"159","endLine":61,"endColumn":80},{"ruleId":"164","severity":1,"message":"165","line":7,"column":3,"nodeType":"166","messageId":"167","endLine":9,"endColumn":4},{"ruleId":"146","severity":1,"message":"168","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":8,"column":3,"nodeType":"166","messageId":"167","endLine":10,"endColumn":4},{"ruleId":"157","severity":1,"message":"158","line":32,"column":11,"nodeType":"159","endLine":32,"endColumn":46},{"ruleId":"157","severity":1,"message":"158","line":60,"column":13,"nodeType":"159","endLine":60,"endColumn":48},{"ruleId":"164","severity":1,"message":"165","line":7,"column":3,"nodeType":"166","messageId":"167","endLine":9,"endColumn":4},{"ruleId":"164","severity":1,"message":"165","line":10,"column":3,"nodeType":"166","messageId":"167","endLine":12,"endColumn":4},{"ruleId":"146","severity":1,"message":"169","line":15,"column":9,"nodeType":"148","messageId":"149","endLine":15,"endColumn":15},{"ruleId":"146","severity":1,"message":"170","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":12},{"ruleId":"157","severity":1,"message":"158","line":57,"column":11,"nodeType":"159","endLine":57,"endColumn":72},{"ruleId":"146","severity":1,"message":"171","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":15},{"ruleId":"146","severity":1,"message":"168","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":13},{"ruleId":"146","severity":1,"message":"172","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":26},{"ruleId":"146","severity":1,"message":"173","line":20,"column":8,"nodeType":"148","messageId":"149","endLine":20,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":267,"column":25,"nodeType":"159","endLine":279,"endColumn":27},{"ruleId":"157","severity":1,"message":"158","line":357,"column":21,"nodeType":"159","endLine":357,"endColumn":70},{"ruleId":"157","severity":1,"message":"158","line":712,"column":19,"nodeType":"159","endLine":712,"endColumn":73},{"ruleId":"157","severity":1,"message":"158","line":718,"column":19,"nodeType":"159","endLine":718,"endColumn":72},{"ruleId":"157","severity":1,"message":"158","line":724,"column":19,"nodeType":"159","endLine":724,"endColumn":71},{"ruleId":"146","severity":1,"message":"168","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":13},{"ruleId":"146","severity":1,"message":"174","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":22},{"ruleId":"146","severity":1,"message":"175","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":16},{"ruleId":"176","severity":1,"message":"177","line":34,"column":7,"nodeType":"178","messageId":"163","endLine":34,"endColumn":15},{"ruleId":"179","severity":1,"message":"180","line":62,"column":11,"nodeType":"148","messageId":"181","endLine":62,"endColumn":22},{"ruleId":"179","severity":1,"message":"182","line":75,"column":11,"nodeType":"148","messageId":"181","endLine":75,"endColumn":22},{"ruleId":"179","severity":1,"message":"183","line":88,"column":11,"nodeType":"148","messageId":"181","endLine":88,"endColumn":21},{"ruleId":"179","severity":1,"message":"183","line":101,"column":11,"nodeType":"148","messageId":"181","endLine":101,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":105,"column":3,"nodeType":"166","messageId":"163","endLine":117,"endColumn":4},{"ruleId":"179","severity":1,"message":"180","line":114,"column":11,"nodeType":"148","messageId":"181","endLine":114,"endColumn":22},{"ruleId":"160","severity":1,"message":"186","line":156,"column":34,"nodeType":"162","messageId":"163","endLine":156,"endColumn":36},{"ruleId":"160","severity":1,"message":"186","line":162,"column":34,"nodeType":"162","messageId":"163","endLine":162,"endColumn":36},{"ruleId":"160","severity":1,"message":"186","line":168,"column":34,"nodeType":"162","messageId":"163","endLine":168,"endColumn":36},{"ruleId":"160","severity":1,"message":"186","line":176,"column":33,"nodeType":"162","messageId":"163","endLine":176,"endColumn":35},{"ruleId":"160","severity":1,"message":"161","line":201,"column":30,"nodeType":"162","messageId":"163","endLine":201,"endColumn":32},{"ruleId":"146","severity":1,"message":"187","line":307,"column":9,"nodeType":"148","messageId":"149","endLine":307,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":339,"column":28,"nodeType":"162","messageId":"163","endLine":339,"endColumn":30},{"ruleId":"160","severity":1,"message":"161","line":386,"column":26,"nodeType":"162","messageId":"163","endLine":386,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":432,"column":5,"nodeType":"190","messageId":"191","endLine":579,"endColumn":6},{"ruleId":"192","severity":1,"message":"193","line":432,"column":5,"nodeType":"190","messageId":"194","endLine":477,"endColumn":6},{"ruleId":"192","severity":1,"message":"193","line":478,"column":5,"nodeType":"190","messageId":"194","endLine":526,"endColumn":6},{"ruleId":"192","severity":1,"message":"193","line":528,"column":5,"nodeType":"190","messageId":"194","endLine":579,"endColumn":6},{"ruleId":"195","severity":1,"message":"196","line":599,"column":11,"nodeType":"159","endLine":609,"endColumn":12},{"ruleId":"160","severity":1,"message":"161","line":48,"column":37,"nodeType":"162","messageId":"163","endLine":48,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":56,"column":19,"nodeType":"159","endLine":56,"endColumn":81},{"ruleId":"146","severity":1,"message":"197","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":14},{"ruleId":"146","severity":1,"message":"168","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":13},{"ruleId":"198","severity":1,"message":"199","line":39,"column":32,"nodeType":"200","messageId":"201","endLine":39,"endColumn":33,"suggestions":"202"},{"ruleId":"198","severity":1,"message":"199","line":39,"column":85,"nodeType":"200","messageId":"201","endLine":39,"endColumn":86,"suggestions":"203"},{"ruleId":"160","severity":1,"message":"161","line":44,"column":29,"nodeType":"162","messageId":"163","endLine":44,"endColumn":31},{"ruleId":"160","severity":1,"message":"161","line":48,"column":35,"nodeType":"162","messageId":"163","endLine":48,"endColumn":37},{"ruleId":"204","severity":1,"message":"205","line":47,"column":40,"nodeType":"206","messageId":"207","endLine":47,"endColumn":42},"no-unused-vars","'hot' is defined but never used.","Identifier","unusedVar","no-native-reassign",["208"],"no-negated-in-lhs",["209"],"'NavLink' is defined but never used.","'icon' is defined but never used.","'Land' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'axios' is defined but never used.","'images' is assigned a value but never used.","'Form' is defined but never used.","'Image' is defined but never used.","'main_futuresuburbs' is defined but never used.","'about_us' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","no-dupe-keys","Duplicate key 'location'.","ObjectExpression","no-redeclare","'newLocation' is already defined.","redeclared","'newIndustry' is already defined.","'newJobType' is already defined.","no-dupe-class-members","Duplicate name 'handleCheckboxLocation'.","Expected '===' and instead saw '=='.","'filteredJobs' is assigned a value but never used.","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","no-lone-blocks","Nested block is redundant.","redundantNestedBlock","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Button' is defined but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["210","211"],["212","213"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"messageId":"214","fix":"215","desc":"216"},{"messageId":"217","fix":"218","desc":"219"},{"messageId":"214","fix":"220","desc":"216"},{"messageId":"217","fix":"221","desc":"219"},"removeEscape",{"range":"222","text":"223"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"224","text":"225"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"226","text":"223"},{"range":"227","text":"225"},[867,868],"",[867,867],"\\",[920,921],[920,920]]